name: Build CMake

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build_task:
    env:
      buildDir: '${{ github.workspace }}/build'
    name: ${{ matrix.os }}-hosted
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checks-out
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup cmake and ninja
        uses: lukka/get-cmake@latest
      - name: Setup dependency
        uses: lukka/run-vcpkg@v6.2
        with:
          vcpkgDirectory: ${{ github.workspace }}/vcpkg
          vcpkgArguments: openssl zlib
          vcpkgGitUrl: 'https://github.com/microsoft/vcpkg.git'
          additionalCachedPaths: ${{ env.buildDir }}/vcpkg_installed
          useShell: true
      - name: Build and install
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          useVcpkgToolchainFile: true
          cmakeAppendedArgs: >-
            -G Ninja
            -DCMAKE_INSTALL_PREFIX=.
          buildDirectory: ${{ env.buildDir }}
          buildWithCMakeArgs: '--target install'
      - name: Export dll
        if: runner.os == 'Windows'
        run: |
          xcopy /y vcpkg\installed\${{ env.RUNVCPKG_VCPKG_TRIPLET_OUT }}\bin\*.dll bin\
      - name: Run tests
        shell: bash
        run: |
          cd ${GITHUB_WORKSPACE}/build
          ctest -C Debug
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Gsx2Jsonpp-${{ matrix.os }}
          path: ${{ env.buildDir }}/bin/
